package launch

import (
	"github.com/spikeekips/mitum/base"
	"github.com/spikeekips/mitum/base/ballot"
	"github.com/spikeekips/mitum/base/block"
	"github.com/spikeekips/mitum/base/key"
	"github.com/spikeekips/mitum/base/node"
	"github.com/spikeekips/mitum/base/operation"
	"github.com/spikeekips/mitum/base/state"
	"github.com/spikeekips/mitum/network"
	"github.com/spikeekips/mitum/util/hint"
	"github.com/spikeekips/mitum/util/tree"
)

var EncoderTypes = []hint.Type{
	base.ACCEPTBallotFactType,
	base.ACCEPTBallotType,
	base.BallotFactSignType,
	base.BaseFactSignType,
	base.INITBallotFactType,
	base.INITBallotType,
	base.ProposalFactType,
	base.ProposalType,
	base.SignedBallotFactType,
	base.StringAddressType,
	base.VoteproofV0Type,
	block.BaseBlockDataMapType,
	block.BlockConsensusInfoV0Type,
	block.BlockV0Type,
	block.ManifestV0Type,
	block.SuffrageInfoV0Type,
	key.BasePrivatekeyType,
	key.BasePublickeyType,
	network.EndHandoverSealV0Type,
	network.HTTPConnInfoType,
	network.NilConnInfoType,
	network.NodeInfoType,
	network.PingHandoverSealV0Type,
	network.ProblemType,
	network.StartHandoverSealV0Type,
	node.BaseV0Type,
	operation.BaseReasonErrorType,
	operation.FixedTreeNodeType,
	operation.SealType,
	state.BytesValueType,
	state.DurationValueType,
	state.HintedValueType,
	state.NumberValueType,
	state.SliceValueType,
	state.StateV0Type,
	state.StringValueType,
	state.FixedTreeNodeType,
	tree.FixedTreeType,
}

var EncoderHinters = []hint.Hinter{
	ballot.ACCEPTFactHinter,
	ballot.ACCEPTHinter,
	ballot.INITFactHinter,
	ballot.INITHinter,
	ballot.ProposalFactHinter,
	ballot.ProposalHinter,
	base.BallotFactSignHinter,
	base.BaseFactSignHinter,
	base.SignedBallotFactHinter,
	base.StringAddressHinter,
	base.VoteproofV0Hinter,
	block.BaseBlockDataMapHinter,
	block.BlockV0Hinter,
	block.BlockConsensusInfoV0Hinter,
	block.ManifestV0Hinter,
	block.SuffrageInfoV0Hinter,
	key.BasePrivatekey{},
	key.BasePublickey{},
	network.EndHandoverSealV0Hinter,
	network.HTTPConnInfoHinter,
	network.NilConnInfoHinter,
	network.NodeInfoV0Hinter,
	network.PingHandoverSealV0Hinter,
	network.ProblemHinter,
	network.StartHandoverSealV0Hinter,
	node.BaseV0Hinter,
	operation.BaseReasonError{},
	operation.FixedTreeNodeHinter,
	operation.SealHinter,
	state.BytesValueHinter,
	state.DurationValueHinter,
	state.FixedTreeNodeHinter,
	state.HintedValueHinter,
	state.NumberValueHinter,
	state.SliceValueHinter,
	state.StateV0{},
	state.StringValueHinter,
	tree.FixedTreeHinter,
}
