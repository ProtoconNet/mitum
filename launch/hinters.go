package launch

import (
	"github.com/spikeekips/mitum/base"
	"github.com/spikeekips/mitum/base/ballot"
	"github.com/spikeekips/mitum/base/block"
	"github.com/spikeekips/mitum/base/key"
	"github.com/spikeekips/mitum/base/node"
	"github.com/spikeekips/mitum/base/operation"
	"github.com/spikeekips/mitum/base/state"
	"github.com/spikeekips/mitum/network"
	"github.com/spikeekips/mitum/util/hint"
	"github.com/spikeekips/mitum/util/tree"
)

var EncoderTypes = []hint.Type{
	base.ACCEPTBallotFactType,
	base.ACCEPTBallotType,
	base.BallotFactSignType,
	base.BaseFactSignType,
	base.SignedBallotFactType,
	base.INITBallotFactType,
	base.INITBallotType,
	base.ProposalFactType,
	base.ProposalType,
	base.StringAddressType,
	base.VoteproofV0Type,
	block.BaseBlockDataMapType,
	block.BlockConsensusInfoV0Type,
	block.BlockV0Type,
	block.ManifestV0Type,
	block.SuffrageInfoV0Type,
	key.BTCPrivatekeyType,
	key.BTCPublickeyType,
	key.EtherPrivatekeyType,
	key.EtherPublickeyType,
	key.StellarPrivatekeyType,
	key.StellarPublickeyType,
	network.EndHandoverSealV0Type,
	network.HTTPConnInfoType,
	network.NilConnInfoType,
	network.NodeInfoType,
	network.PingHandoverSealV0Type,
	network.ProblemType,
	network.StartHandoverSealV0Type,
	node.BaseV0Type,
	operation.BaseReasonErrorType,
	operation.FixedTreeNodeType,
	operation.SealType,
	state.BytesValueType,
	state.DurationValueType,
	state.HintedValueType,
	state.NumberValueType,
	state.SliceValueType,
	state.StateV0Type,
	state.StringValueType,
	tree.BaseFixedTreeNodeType,
	tree.FixedTreeType,
}

var EncoderHinters = []hint.Hinter{
	ballot.ACCEPTFactHinter,
	ballot.ACCEPTHinter,
	ballot.INITFactHinter,
	ballot.INITHinter,
	ballot.ProposalFactHinter,
	ballot.ProposalHinter,
	base.BaseBallotFactSign{},
	base.BaseFactSign{},
	base.BaseSignedBallotFact{},
	base.StringAddress(""),
	base.VoteproofV0{},
	block.BaseBlockDataMap{},
	block.BlockV0{},
	block.ConsensusInfoV0{},
	block.ManifestV0{},
	block.SuffrageInfoV0{},
	key.BTCPrivatekeyHinter,
	key.BTCPublickeyHinter,
	key.EtherPrivatekeyHinter,
	key.EtherPublickeyHinter,
	key.StellarPrivatekeyHinter,
	key.StellarPublickeyHinter,
	network.EndHandoverSealV0Hinter,
	network.HTTPConnInfo{},
	network.NilConnInfo{},
	network.NodeInfoV0{},
	network.PingHandoverSealV0Hinter,
	network.Problem{},
	network.StartHandoverSealV0Hinter,
	node.BaseV0{},
	operation.BaseReasonError{},
	operation.FixedTreeNode{},
	operation.SealHinter,
	state.BytesValue{},
	state.DurationValue{},
	state.HintedValue{},
	state.NumberValue{},
	state.SliceValue{},
	state.StateV0{},
	state.StringValue{},
	tree.BaseFixedTreeNode{},
	tree.FixedTree{},
}
